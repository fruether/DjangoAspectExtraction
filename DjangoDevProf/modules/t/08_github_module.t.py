__author__ = 'freddy'
from TAP.Simple   import *
from modules import Git
import sys
plan(2)
ok(Git.retrieve_commits("/Users/freddy/Documents/Bachelor_Project/bsc.-developer-profiling/DjangoDevProf/modules/t/repo/project") == 136)

value = Git.get_next_file()
result = (136, 'A', 'Xray42', 'our_git_for_project', u'101worker/modules/igraph/src/org/softlang/igraph/queries/ThemeMembersQuery.java', 'package org.softlang.igraph.queries;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.jgrapht.DirectedGraph;\nimport org.jgrapht.graph.DefaultDirectedGraph;\nimport org.jgrapht.graph.DefaultEdge;\nimport org.softlang.igraph.ImplementationVertex;\nimport org.softlang.igraph.Model;\nimport org.softlang.igraph.Query;\nimport org.softlang.igraph.ThemeVertex;\nimport org.softlang.igraph.Vertex;\n\nimport ru.yandex.bolts.collection.Cf;\nimport ru.yandex.bolts.collection.ListF;\nimport ru.yandex.bolts.function.Function1V;\n\nimport com.hp.hpl.jena.rdf.model.RDFNode;\nimport com.hp.hpl.jena.rdf.model.Resource;\nimport com.hp.hpl.jena.rdf.model.Statement;\n\npublic class ThemeMembersQuery extends Query {\n\n\tpublic ThemeMembersQuery(String filter) {\n\t\tsuper(filter);\t//filter -- name of the theme\n\t}\n\n\t@Override\n\tpublic DirectedGraph<Vertex, DefaultEdge> Execute() {\n\t\t//All implementations being members of a theme.\n\t\tString theme = "http://data101companies.org/data/Category/" + _filter;\n\t\tResource r = _model.getResource(theme) ;\n\t\tIterator<Statement> implIter = r.listProperties(Model.IMPLEMENTATION_MEMBERS).toList().iterator();\n\n\t\tfinal List<Resource> result = new ArrayList<Resource>();\n\n\t\twhile (implIter.hasNext()) {\n\t\t\tStatement impl      = implIter.next();  // get next statement\n\t\t\tRDFNode   object    = impl.getObject(); // get the object\n\n\t\t\tif (object instanceof Resource) {\n\t\t\t\tResource name = _model.getResource(impl.getObject().toString());\n\t\t\t\t//System.out.println(name);\n\t\t\t\tresult.add(name);\n\t\t\t} else {\n\t\t\t\t// object is a literal\n\t\t\t\tSystem.out.print(" \\"" + object.toString() + "\\"");\n\t\t\t}\n\t\t}\n\t\t\n\t\tfinal DirectedGraph<Vertex, DefaultEdge> g = new DefaultDirectedGraph<Vertex, DefaultEdge> (DefaultEdge.class);\n\t\tfinal Vertex t = new ThemeVertex(_filter);\n\t\tg.addVertex(t);\n\t\t\n\t\tListF<Resource> res = Cf.list(result);\n\t\t\n\t\tres.forEach(new Function1V<Resource>(){\n\t\t\t@Override\n\t\t\tpublic void apply(Resource arg) {\n\t\t\t\tString name = Lookup((Resource)arg, Model.NAME).get3();\n\t\t\t\tString res = Lookup((Resource)arg, Model.NAME).get1();\n\t\t\t\tVertex v = new ImplementationVertex(name);\n\t\t\t\tv.set_resource(res);\n\t\t\t\tg.addVertex(v);\n\t\t\t\tg.addEdge(t, v);\n\t\t\t}});\n\t\t\n\t\t\n\t\treturn g;\n\t}\n}', 'Wed Feb 18 10:19:30 2015', '--- \n\n+++ \n\n@@ -0,0 +1,2222 @@\n\n+p\n+a\n+c\n+k\n+a\n+g\n+e\n+ \n+o\n+r\n+g\n+.\n+s\n+o\n+f\n+t\n+l\n+a\n+n\n+g\n+.\n+i\n+g\n+r\n+a\n+p\n+h\n+.\n+q\n+u\n+e\n+r\n+i\n+e\n+s\n+;\n+\n\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+j\n+a\n+v\n+a\n+.\n+u\n+t\n+i\n+l\n+.\n+A\n+r\n+r\n+a\n+y\n+L\n+i\n+s\n+t\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+j\n+a\n+v\n+a\n+.\n+u\n+t\n+i\n+l\n+.\n+I\n+t\n+e\n+r\n+a\n+t\n+o\n+r\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+j\n+a\n+v\n+a\n+.\n+u\n+t\n+i\n+l\n+.\n+L\n+i\n+s\n+t\n+;\n+\n\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+j\n+g\n+r\n+a\n+p\n+h\n+t\n+.\n+D\n+i\n+r\n+e\n+c\n+t\n+e\n+d\n+G\n+r\n+a\n+p\n+h\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+j\n+g\n+r\n+a\n+p\n+h\n+t\n+.\n+g\n+r\n+a\n+p\n+h\n+.\n+D\n+e\n+f\n+a\n+u\n+l\n+t\n+D\n+i\n+r\n+e\n+c\n+t\n+e\n+d\n+G\n+r\n+a\n+p\n+h\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+j\n+g\n+r\n+a\n+p\n+h\n+t\n+.\n+g\n+r\n+a\n+p\n+h\n+.\n+D\n+e\n+f\n+a\n+u\n+l\n+t\n+E\n+d\n+g\n+e\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+s\n+o\n+f\n+t\n+l\n+a\n+n\n+g\n+.\n+i\n+g\n+r\n+a\n+p\n+h\n+.\n+I\n+m\n+p\n+l\n+e\n+m\n+e\n+n\n+t\n+a\n+t\n+i\n+o\n+n\n+V\n+e\n+r\n+t\n+e\n+x\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+s\n+o\n+f\n+t\n+l\n+a\n+n\n+g\n+.\n+i\n+g\n+r\n+a\n+p\n+h\n+.\n+M\n+o\n+d\n+e\n+l\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+s\n+o\n+f\n+t\n+l\n+a\n+n\n+g\n+.\n+i\n+g\n+r\n+a\n+p\n+h\n+.\n+Q\n+u\n+e\n+r\n+y\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+s\n+o\n+f\n+t\n+l\n+a\n+n\n+g\n+.\n+i\n+g\n+r\n+a\n+p\n+h\n+.\n+T\n+h\n+e\n+m\n+e\n+V\n+e\n+r\n+t\n+e\n+x\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+o\n+r\n+g\n+.\n+s\n+o\n+f\n+t\n+l\n+a\n+n\n+g\n+.\n+i\n+g\n+r\n+a\n+p\n+h\n+.\n+V\n+e\n+r\n+t\n+e\n+x\n+;\n+\n\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+r\n+u\n+.\n+y\n+a\n+n\n+d\n+e\n+x\n+.\n+b\n+o\n+l\n+t\n+s\n+.\n+c\n+o\n+l\n+l\n+e\n+c\n+t\n+i\n+o\n+n\n+.\n+C\n+f\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+r\n+u\n+.\n+y\n+a\n+n\n+d\n+e\n+x\n+.\n+b\n+o\n+l\n+t\n+s\n+.\n+c\n+o\n+l\n+l\n+e\n+c\n+t\n+i\n+o\n+n\n+.\n+L\n+i\n+s\n+t\n+F\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+r\n+u\n+.\n+y\n+a\n+n\n+d\n+e\n+x\n+.\n+b\n+o\n+l\n+t\n+s\n+.\n+f\n+u\n+n\n+c\n+t\n+i\n+o\n+n\n+.\n+F\n+u\n+n\n+c\n+t\n+i\n+o\n+n\n+1\n+V\n+;\n+\n\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+c\n+o\n+m\n+.\n+h\n+p\n+.\n+h\n+p\n+l\n+.\n+j\n+e\n+n\n+a\n+.\n+r\n+d\n+f\n+.\n+m\n+o\n+d\n+e\n+l\n+.\n+R\n+D\n+F\n+N\n+o\n+d\n+e\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+c\n+o\n+m\n+.\n+h\n+p\n+.\n+h\n+p\n+l\n+.\n+j\n+e\n+n\n+a\n+.\n+r\n+d\n+f\n+.\n+m\n+o\n+d\n+e\n+l\n+.\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+;\n+\n\n+i\n+m\n+p\n+o\n+r\n+t\n+ \n+c\n+o\n+m\n+.\n+h\n+p\n+.\n+h\n+p\n+l\n+.\n+j\n+e\n+n\n+a\n+.\n+r\n+d\n+f\n+.\n+m\n+o\n+d\n+e\n+l\n+.\n+S\n+t\n+a\n+t\n+e\n+m\n+e\n+n\n+t\n+;\n+\n\n+\n\n+p\n+u\n+b\n+l\n+i\n+c\n+ \n+c\n+l\n+a\n+s\n+s\n+ \n+T\n+h\n+e\n+m\n+e\n+M\n+e\n+m\n+b\n+e\n+r\n+s\n+Q\n+u\n+e\n+r\n+y\n+ \n+e\n+x\n+t\n+e\n+n\n+d\n+s\n+ \n+Q\n+u\n+e\n+r\n+y\n+ \n+{\n+\n\n+\n\n+\t\n+p\n+u\n+b\n+l\n+i\n+c\n+ \n+T\n+h\n+e\n+m\n+e\n+M\n+e\n+m\n+b\n+e\n+r\n+s\n+Q\n+u\n+e\n+r\n+y\n+(\n+S\n+t\n+r\n+i\n+n\n+g\n+ \n+f\n+i\n+l\n+t\n+e\n+r\n+)\n+ \n+{\n+\n\n+\t\n+\t\n+s\n+u\n+p\n+e\n+r\n+(\n+f\n+i\n+l\n+t\n+e\n+r\n+)\n+;\n+\t\n+/\n+/\n+f\n+i\n+l\n+t\n+e\n+r\n+ \n+-\n+-\n+ \n+n\n+a\n+m\n+e\n+ \n+o\n+f\n+ \n+t\n+h\n+e\n+ \n+t\n+h\n+e\n+m\n+e\n+\n\n+\t\n+}\n+\n\n+\n\n+\t\n+@\n+O\n+v\n+e\n+r\n+r\n+i\n+d\n+e\n+\n\n+\t\n+p\n+u\n+b\n+l\n+i\n+c\n+ \n+D\n+i\n+r\n+e\n+c\n+t\n+e\n+d\n+G\n+r\n+a\n+p\n+h\n+<\n+V\n+e\n+r\n+t\n+e\n+x\n+,\n+ \n+D\n+e\n+f\n+a\n+u\n+l\n+t\n+E\n+d\n+g\n+e\n+>\n+ \n+E\n+x\n+e\n+c\n+u\n+t\n+e\n+(\n+)\n+ \n+{\n+\n\n+\t\n+\t\n+/\n+/\n+A\n+l\n+l\n+ \n+i\n+m\n+p\n+l\n+e\n+m\n+e\n+n\n+t\n+a\n+t\n+i\n+o\n+n\n+s\n+ \n+b\n+e\n+i\n+n\n+g\n+ \n+m\n+e\n+m\n+b\n+e\n+r\n+s\n+ \n+o\n+f\n+ \n+a\n+ \n+t\n+h\n+e\n+m\n+e\n+.\n+\n\n+\t\n+\t\n+S\n+t\n+r\n+i\n+n\n+g\n+ \n+t\n+h\n+e\n+m\n+e\n+ \n+=\n+ \n+"\n+h\n+t\n+t\n+p\n+:\n+/\n+/\n+d\n+a\n+t\n+a\n+1\n+0\n+1\n+c\n+o\n+m\n+p\n+a\n+n\n+i\n+e\n+s\n+.\n+o\n+r\n+g\n+/\n+d\n+a\n+t\n+a\n+/\n+C\n+a\n+t\n+e\n+g\n+o\n+r\n+y\n+/\n+"\n+ \n++\n+ \n+_\n+f\n+i\n+l\n+t\n+e\n+r\n+;\n+\n\n+\t\n+\t\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+ \n+r\n+ \n+=\n+ \n+_\n+m\n+o\n+d\n+e\n+l\n+.\n+g\n+e\n+t\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+(\n+t\n+h\n+e\n+m\n+e\n+)\n+ \n+;\n+\n\n+\t\n+\t\n+I\n+t\n+e\n+r\n+a\n+t\n+o\n+r\n+<\n+S\n+t\n+a\n+t\n+e\n+m\n+e\n+n\n+t\n+>\n+ \n+i\n+m\n+p\n+l\n+I\n+t\n+e\n+r\n+ \n+=\n+ \n+r\n+.\n+l\n+i\n+s\n+t\n+P\n+r\n+o\n+p\n+e\n+r\n+t\n+i\n+e\n+s\n+(\n+M\n+o\n+d\n+e\n+l\n+.\n+I\n+M\n+P\n+L\n+E\n+M\n+E\n+N\n+T\n+A\n+T\n+I\n+O\n+N\n+_\n+M\n+E\n+M\n+B\n+E\n+R\n+S\n+)\n+.\n+t\n+o\n+L\n+i\n+s\n+t\n+(\n+)\n+.\n+i\n+t\n+e\n+r\n+a\n+t\n+o\n+r\n+(\n+)\n+;\n+\n\n+\n\n+\t\n+\t\n+f\n+i\n+n\n+a\n+l\n+ \n+L\n+i\n+s\n+t\n+<\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+>\n+ \n+r\n+e\n+s\n+u\n+l\n+t\n+ \n+=\n+ \n+n\n+e\n+w\n+ \n+A\n+r\n+r\n+a\n+y\n+L\n+i\n+s\n+t\n+<\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+>\n+(\n+)\n+;\n+\n\n+\n\n+\t\n+\t\n+w\n+h\n+i\n+l\n+e\n+ \n+(\n+i\n+m\n+p\n+l\n+I\n+t\n+e\n+r\n+.\n+h\n+a\n+s\n+N\n+e\n+x\n+t\n+(\n+)\n+)\n+ \n+{\n+\n\n+\t\n+\t\n+\t\n+S\n+t\n+a\n+t\n+e\n+m\n+e\n+n\n+t\n+ \n+i\n+m\n+p\n+l\n+ \n+ \n+ \n+ \n+ \n+ \n+=\n+ \n+i\n+m\n+p\n+l\n+I\n+t\n+e\n+r\n+.\n+n\n+e\n+x\n+t\n+(\n+)\n+;\n+ \n+ \n+/\n+/\n+ \n+g\n+e\n+t\n+ \n+n\n+e\n+x\n+t\n+ \n+s\n+t\n+a\n+t\n+e\n+m\n+e\n+n\n+t\n+\n\n+\t\n+\t\n+\t\n+R\n+D\n+F\n+N\n+o\n+d\n+e\n+ \n+ \n+ \n+o\n+b\n+j\n+e\n+c\n+t\n+ \n+ \n+ \n+ \n+=\n+ \n+i\n+m\n+p\n+l\n+.\n+g\n+e\n+t\n+O\n+b\n+j\n+e\n+c\n+t\n+(\n+)\n+;\n+ \n+/\n+/\n+ \n+g\n+e\n+t\n+ \n+t\n+h\n+e\n+ \n+o\n+b\n+j\n+e\n+c\n+t\n+\n\n+\n\n+\t\n+\t\n+\t\n+i\n+f\n+ \n+(\n+o\n+b\n+j\n+e\n+c\n+t\n+ \n+i\n+n\n+s\n+t\n+a\n+n\n+c\n+e\n+o\n+f\n+ \n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+)\n+ \n+{\n+\n\n+\t\n+\t\n+\t\n+\t\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+ \n+n\n+a\n+m\n+e\n+ \n+=\n+ \n+_\n+m\n+o\n+d\n+e\n+l\n+.\n+g\n+e\n+t\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+(\n+i\n+m\n+p\n+l\n+.\n+g\n+e\n+t\n+O\n+b\n+j\n+e\n+c\n+t\n+(\n+)\n+.\n+t\n+o\n+S\n+t\n+r\n+i\n+n\n+g\n+(\n+)\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+\t\n+/\n+/\n+S\n+y\n+s\n+t\n+e\n+m\n+.\n+o\n+u\n+t\n+.\n+p\n+r\n+i\n+n\n+t\n+l\n+n\n+(\n+n\n+a\n+m\n+e\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+\t\n+r\n+e\n+s\n+u\n+l\n+t\n+.\n+a\n+d\n+d\n+(\n+n\n+a\n+m\n+e\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+}\n+ \n+e\n+l\n+s\n+e\n+ \n+{\n+\n\n+\t\n+\t\n+\t\n+\t\n+/\n+/\n+ \n+o\n+b\n+j\n+e\n+c\n+t\n+ \n+i\n+s\n+ \n+a\n+ \n+l\n+i\n+t\n+e\n+r\n+a\n+l\n+\n\n+\t\n+\t\n+\t\n+\t\n+S\n+y\n+s\n+t\n+e\n+m\n+.\n+o\n+u\n+t\n+.\n+p\n+r\n+i\n+n\n+t\n+(\n+"\n+ \n+\\\n+"\n+"\n+ \n++\n+ \n+o\n+b\n+j\n+e\n+c\n+t\n+.\n+t\n+o\n+S\n+t\n+r\n+i\n+n\n+g\n+(\n+)\n+ \n++\n+ \n+"\n+\\\n+"\n+"\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+}\n+\n\n+\t\n+\t\n+}\n+\n\n+\t\n+\t\n+\n\n+\t\n+\t\n+f\n+i\n+n\n+a\n+l\n+ \n+D\n+i\n+r\n+e\n+c\n+t\n+e\n+d\n+G\n+r\n+a\n+p\n+h\n+<\n+V\n+e\n+r\n+t\n+e\n+x\n+,\n+ \n+D\n+e\n+f\n+a\n+u\n+l\n+t\n+E\n+d\n+g\n+e\n+>\n+ \n+g\n+ \n+=\n+ \n+n\n+e\n+w\n+ \n+D\n+e\n+f\n+a\n+u\n+l\n+t\n+D\n+i\n+r\n+e\n+c\n+t\n+e\n+d\n+G\n+r\n+a\n+p\n+h\n+<\n+V\n+e\n+r\n+t\n+e\n+x\n+,\n+ \n+D\n+e\n+f\n+a\n+u\n+l\n+t\n+E\n+d\n+g\n+e\n+>\n+ \n+(\n+D\n+e\n+f\n+a\n+u\n+l\n+t\n+E\n+d\n+g\n+e\n+.\n+c\n+l\n+a\n+s\n+s\n+)\n+;\n+\n\n+\t\n+\t\n+f\n+i\n+n\n+a\n+l\n+ \n+V\n+e\n+r\n+t\n+e\n+x\n+ \n+t\n+ \n+=\n+ \n+n\n+e\n+w\n+ \n+T\n+h\n+e\n+m\n+e\n+V\n+e\n+r\n+t\n+e\n+x\n+(\n+_\n+f\n+i\n+l\n+t\n+e\n+r\n+)\n+;\n+\n\n+\t\n+\t\n+g\n+.\n+a\n+d\n+d\n+V\n+e\n+r\n+t\n+e\n+x\n+(\n+t\n+)\n+;\n+\n\n+\t\n+\t\n+\n\n+\t\n+\t\n+L\n+i\n+s\n+t\n+F\n+<\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+>\n+ \n+r\n+e\n+s\n+ \n+=\n+ \n+C\n+f\n+.\n+l\n+i\n+s\n+t\n+(\n+r\n+e\n+s\n+u\n+l\n+t\n+)\n+;\n+\n\n+\t\n+\t\n+\n\n+\t\n+\t\n+r\n+e\n+s\n+.\n+f\n+o\n+r\n+E\n+a\n+c\n+h\n+(\n+n\n+e\n+w\n+ \n+F\n+u\n+n\n+c\n+t\n+i\n+o\n+n\n+1\n+V\n+<\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+>\n+(\n+)\n+{\n+\n\n+\t\n+\t\n+\t\n+@\n+O\n+v\n+e\n+r\n+r\n+i\n+d\n+e\n+\n\n+\t\n+\t\n+\t\n+p\n+u\n+b\n+l\n+i\n+c\n+ \n+v\n+o\n+i\n+d\n+ \n+a\n+p\n+p\n+l\n+y\n+(\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+ \n+a\n+r\n+g\n+)\n+ \n+{\n+\n\n+\t\n+\t\n+\t\n+\t\n+S\n+t\n+r\n+i\n+n\n+g\n+ \n+n\n+a\n+m\n+e\n+ \n+=\n+ \n+L\n+o\n+o\n+k\n+u\n+p\n+(\n+(\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+)\n+a\n+r\n+g\n+,\n+ \n+M\n+o\n+d\n+e\n+l\n+.\n+N\n+A\n+M\n+E\n+)\n+.\n+g\n+e\n+t\n+3\n+(\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+\t\n+S\n+t\n+r\n+i\n+n\n+g\n+ \n+r\n+e\n+s\n+ \n+=\n+ \n+L\n+o\n+o\n+k\n+u\n+p\n+(\n+(\n+R\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+)\n+a\n+r\n+g\n+,\n+ \n+M\n+o\n+d\n+e\n+l\n+.\n+N\n+A\n+M\n+E\n+)\n+.\n+g\n+e\n+t\n+1\n+(\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+\t\n+V\n+e\n+r\n+t\n+e\n+x\n+ \n+v\n+ \n+=\n+ \n+n\n+e\n+w\n+ \n+I\n+m\n+p\n+l\n+e\n+m\n+e\n+n\n+t\n+a\n+t\n+i\n+o\n+n\n+V\n+e\n+r\n+t\n+e\n+x\n+(\n+n\n+a\n+m\n+e\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+\t\n+v\n+.\n+s\n+e\n+t\n+_\n+r\n+e\n+s\n+o\n+u\n+r\n+c\n+e\n+(\n+r\n+e\n+s\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+\t\n+g\n+.\n+a\n+d\n+d\n+V\n+e\n+r\n+t\n+e\n+x\n+(\n+v\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+\t\n+g\n+.\n+a\n+d\n+d\n+E\n+d\n+g\n+e\n+(\n+t\n+,\n+ \n+v\n+)\n+;\n+\n\n+\t\n+\t\n+\t\n+}\n+}\n+)\n+;\n+\n\n+\t\n+\t\n+\n\n+\t\n+\t\n+\n\n+\t\n+\t\n+r\n+e\n+t\n+u\n+r\n+n\n+ \n+g\n+;\n+\n\n+\t\n+}\n+\n\n+}')
#print >> sys.stderr, value
eq_ok(value, result, "Check if the file is read right")
